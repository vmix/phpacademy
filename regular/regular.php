<?php
/**
 * Created by PhpStorm.
 * User: Ivan
 * Date: 4/30/17
 * Time: 3:08 PM
 */
/**
 * Любое выражение начинается с символа-ограничителя (delimiter по англ.). В качестве него обычно используют символ /,
 * но можно использовать и другие символы, не имеющие специального назначения в регулярках, например, ~, # или @.
 * Альтернативные разделители используют, если в выражении может встречаться символ /.
 * Затем идет сам шаблон строки, которую мы ищем, за ним второй ограничитель и в конце может идти одна или несколько букв-флагов.
 * Они задают дополнительные опции при поиске текста. Вот примеры флагов:

    i - говорит, что поиск должен вестись без учета регистра букв (по умолчанию регистр учитывается)
    u - говорит, что выражение и текст, по которому идет поиск, исплоьзуют кодировку utf-8,
 * а не только латинские буквы. Без него поиск русских (и любых других нелатинских) символов может работать некорректно,
 * потому стоит ставить его всегда.
 */

/**
 * Сам шаблон состоит из обычных символов и специальных конструкций. Ну например, буква «к» в регулярках обозначает саму себя,
 * а вот символы [0-5] значат «в этом месте может быть любая цифра от 0 до 5».
 * Вот полный список специальных символов (в мануале php их называют метасимволы):
 *                      \ ^ $ . [] | () ? * + {}
 */

/**
 * Ниже мы разберем значение каждого из этих символов (а также объясним почему буква «ё» вынесена отдельно в первом выражении),
 * а пока попробуем применить наши регулярки к тексту и посмотреть, что выйдет.
 * В php есть специальная функция preg_match($regexp, $text, $match), которая принимает на вход регулярку, текст и пустой массив.
 * Она проверяет, есть ли в тексте подстрока, соответствующая данному шаблону и возвращает 0, если нет, или 1, если она есть.
 * А в переданный массив в элемент с индексом 0 кладется первое найденное совпадение с регуляркой.
 * Напишем простую программу, применяющую регулярные выражения к разным строкам:
 */

$regexp = "/к[а-яё]т/ui"; # / - начало и конец регулярки, u - UTF8(для русских символов) i - без учета регистра
$lines = [
    'рыжий кЁт',
    'рыжий кит',
    'кит и кот',
];
foreach ($lines as $line) {
    echo "Cтрока <br>";
    $match = array();
    if (preg_match($regexp,$line,$match)){
        echo "+ Найденно слово: '{$match[0]}' <br>";
    } else {
        echo "- Ничего не найдено <br>";
    }
}
echo "<br>";
var_dump($match);

$str = ' Лысый котавася искал карусель и неожиданно для себя нашел ее';
$regexp2 = "~к[а-яё]т~ui";
$match2 = array();
preg_match($regexp2,$str,$match2);
var_dump($match2);
