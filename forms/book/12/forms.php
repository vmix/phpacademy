<?php
/**
 * Created by PhpStorm.
 * User: 0311
 * Date: 10.05.2017
 * Time: 8:34 AM
 */
/**
 * Обработка отправленных файлов
 * Информация об отправленных файлах хранится в суперглобальном массиве
$_FILES. Для каждого элемента file на форме в $_FILES создается массив, ключом
которого является имя элемента file. Например, форма в листинге 9.20 содержит
элемент file с именем document, поэтому $_FILES['document'] содержит инфор-
мацию об отправленном файле. Каждый массив, соответствующий одному фай-
лу, содержит пять элементов:
 * name — имя отправленного файла; заполняется браузером и может содержать
как полное имя вместе с путем, так и простое имя файла.
type — MIME-тип содержимого файла, предоставленный браузером.
9.11. Обработка отправленных файлов 315
size — размер файла в байтах, вычисленный сервером.
tmp_name — каталог временного хранения файла на сервере.
error — код ошибки, описывающей проблемы с отправкой файла (если они
были).
Допустимые значения элемента error:
UPLOAD_ERR_OK (0) — отправка прошла успешно (без ошибок).
UPLOAD_ERR_INI_SIZE (1) — размер отправленного файла превышает значение
конфигурационной директивы upload_max_filesize.
UPLOAD_ERR_FORM_SIZE (2) — размер отправленного файла превышает значение
элемента MAX_FILE_SIZE формы.
UPLOAD_ERR_PARTIAL (3) — отправлена только часть файла.
UPLOAD_ERR_NO_FILE (4) — файл отсутствует.
UPLOAD_ERR_NO_TMP_DIR (6) — отправка завершилась неудачей из-за отсутствия
временного каталога для хранения файла.
UPLOAD_ERR_CANT_WRITE (7) — PHP не может записать файл на диск.
UPLOAD_ERR_EXTENSION (8) — отправка остановлена расширением PHP.
 */
if ($_SERVER['REQUEST_METHOD'] == 'GET') { ?>
    <form method="post" action="<?php echo htmlentities($_SERVER['SCRIPT_NAME']) ?>"
          enctype="multipart/form-data">
        <input type="file" name="document"/>
        <input type="submit" value="Send File"/>
    </form>
<?php } else {
    if (isset($_FILES['document']) &&
        ($_FILES['document']['error'] == UPLOAD_ERR_OK)) {
        $newPath = '/tmp/' . basename($_FILES['document']['name']);
        if (move_uploaded_file($_FILES['document']['tmp_name'], $newPath)) {
            print "File saved in $newPath";
        } else {
            print "Couldn't move file to $newPath";
        }
    } else {
        print "No valid file uploaded.";
    }
}
/**
 * Для выполнения такой проверки убедитесь в том, что в конфигурационном фай-
ле директиве file_uploads присвоено значение On. Затем проверьте, что размер
файла не превышает значение upload_max_filesize; по умолчанию порог состав-
ляет 2 Мбайт, чтобы злоумышленник не мог вызвать сбой на компьютере, за-
полнив весь жесткий диск огромным файлом. Также существует директива
post_max_size, управляющая максимальным размером всех отправляемых данных
в одном запросе; начальное значение этого параметра составляет 8 Мбайт.
С точки зрения различий между браузерами и ошибками пользователей, если вы
не находите в $_FILES ожидаемых данных, убедитесь в том, что в открывающий
тег формы был включен атрибут enctype="multipart/form-data". Это необходи-
мо PHP для правильной обработки файлов.
Кроме того, если файл для отправки не выбран, PHP присваивает tmp_name пустую
строку. Чтобы убедиться в том, что файл был отправлен и он не пуст (хотя в не-
которых обстоятельствах пустые файлы могут быть именно тем, что требуется),
проверьте, что значение tmp_name определено, а размер size больше 0. Наконец,
не все браузеры обязательно отправляют для файла один и тот же тип MIME;
отправляемый тип зависит от того, что они знают о разных типах файлов.
 */