<?php
/**
 * Created by PhpStorm.
 * User: 0311
 * Date: 05.05.2017
 * Time: 8:46 AM
 */
/**
 * Проверка ввода на форме: раскрывающиеся меню
 * Требуется проверить, что в раскрывающемся меню, сгенерированном элементом
 * HTML <select/> выбран действительный вариант
 */
// Построение меню
$choices = array('Eggs','Toast','Coffee');
echo "<select name='food'>";
foreach ($choices as $choice) {
    echo "<option>$choice</option>";
}
echo "</select>";

//Последующая проверка выбранного варианта
if (! in_array($_POST['food'],$choices)){
    echo "You myst select a valid choice.";
}
/**
 * При работе с меню, которое задает атрибуты
 * value для каждого элемента <option/>, необходимо использовать функцию
 * array_key_exists();
 */

$choices = array('eggs'=>'Eggs Benedict','toast'=>'Buttered Toast with Jam','coffee'=>'Piping Hot Coffee');
echo "<select name='food'>";
foreach ($choices as $key => $choice) {
    echo "<option value='$key'>$choice</option>";
}
echo "</select>";
// Последующая проверка выбранного варианта
if (! array_key_exists($_POST['food'], $choices)){
    echo "You must select a valid choice";
}
/**
 * стратегия проверки остается неизменной: мы убеждаемся в том,
что значение, отправленное для элемента формы, входит в число допустимых
вариантов. Для запросов, отправленных «правильными» браузерами, это прави-
ло никогда не нарушается — обычно браузеры не позволяют создать фиктивный
выбор для раскрывающегося меню. Однако следует помнить, что запросы к про-
граммам PHP не всегда поступают от «правильных» браузеров. Они с таким же
успехом могут поступить от браузера, содержащего программную ошибку, или
от 11-летнего умника со спецификацией HTTP и telnet-клиентом командной
строки. Так как всегда приходится учитывать возможность поступления вредо-
носных, вручную построенных запросов HTTP, важно проверять ввод даже в том
случае, когда большинство пользователей никогда не столкнется с этой ошибкой.
 */