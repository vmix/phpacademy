<?php
/**
 * Created by PhpStorm.
 * User: 0311
 * Date: 10.05.2017
 * Time: 10:57 AM
 * Воспользуйтесь потоковой оберткой compress.zlib или compress.bzip2 в сочетании со стандартными файловыми функциями.
Чтение данных из файла, сжатого с применением алгоритма gzip:
 */
$file = __DIR__ . '/lots-of-data.gz';
$fh = fopen("compress.zlib://$file",'r') or die("can't open: $php_errormsg");
if ($fh) {
    while ($line = fgets($fh)) {
        // $line - следующая строка несжатых данных
    }
    fclose($fh) or die("can't close: $php_errormsg");
}
/**
Потоковая обертка compress.zlib предоставляет доступ к файлам, сжатым с при-
менением алгоритма gzip. Потоковая обертка compress.bzip2 используется для
файлов, сжатых алгоритмом bzip2. Обе потоковые обертки поддерживают чтение,
запись и присоединение данных к сжатым файлам. Чтобы включить поддержку
потоков сжатия zlib и bzip2, постройте PHP с ключами --with-zlib и --with-bz2
соответственно.
Кроме потоковых оберток, предоставляющих доступ к локальным сжатым фай-
лам, существуют потоковые фильтры, выполняющие сжатие (или восстановле-
ние) произвольных потоков на ходу. Фильтры zlib.deflate и zlib.inflate
сжимают и восстанавливают данные по алгоритму zlib «deflate». Фильтры bzip2.
compress и bzip2.uncompress выполняют те же операции для алгоритма bzip2.
Каждый потоковый фильтр после создания должен быть применен к потоку.
В следующем примере потоковые фильтры bzip2 используются для чтения сжа-
тых данных по URL-адресу:
 */
$fp = fopen('http://www.example.com/something-compressed.bz2','r');

if ($fp) {
    stream_filter_append($fp, 'bzip2.uncompress');
    while (! feof($fp)) {
        $data = fread($fp);
        // Операции с $data;
    }
    fclose($fp);
}